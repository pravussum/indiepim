<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/security    http://www.springframework.org/schema/security/spring-security.xsd
                      http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx.xsd
                      http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                      http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd
                      http://www.springframework.org/schema/util      http://www.springframework.org/schema/util/spring-util-3.1.xsd"
        >

    <!-- scan everything except MVC controllers -->
    <context:component-scan base-package="net.mortalsilence.indiepim.server">
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!-- JPA CONFIGURATION -->

    <jpa:repositories base-package="net.mortalsilence"/>

    <context:property-placeholder location="classpath:default.properties" system-properties-mode="OVERRIDE"/>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/indiePool"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence"/>
        <property name="persistenceUnitName" value="net.mortalsilence.indiepim.jpa"/>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!-- Hibernate Search Properties (Apache Lucene Index) -->
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                <prop key="hibernate.search.default.indexBase">${indieIndexPath}</prop>

            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>net.mortalsilence.indiepim.server</value>
            </list>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- LIQUIBASE CONFIGURATION -->
    <bean id="liquibaseDbUpdater" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource" />
        <property name="changeLog" value="classpath:changelog.xml" />
    </bean>

    <!-- QUARTZ CONFIGURATION -->

    <bean id="AccountIncSyncroJob" class="net.mortalsilence.indiepim.server.schedule.AccountIncSyncroJob" />

    <bean id="QuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
        <property name="schedulerName" value="RoboSched" />
        <property name="autoStartup" value="true"/>
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="overwriteExistingJobs" value="true"/>
        <property name="dataSource">
            <bean class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="jobFactory" >
            <bean class="net.mortalsilence.indiepim.server.spring.SpringBeanJobFactory" />
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">SynchroSched</prop>
                <prop key="org.quartz.threadPool.threadCount">3</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
            </props>
        </property>
    </bean>

    <!-- SPRING SECURITY -->

    <security:http auto-config="false" entry-point-ref="authEntryPoint">
        <security:custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER" />
        <security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
        <security:session-management session-authentication-strategy-ref="sas" />
        <security:intercept-url pattern="/setup" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/expired" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/command/createOrUpdateUser" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/command/getUsers" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/command/**" access="ROLE_USER" />
        <security:intercept-url pattern="/" access="ROLE_USER" />
        <security:logout />
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="indieUserService">
            <security:password-encoder hash="sha-256">
                <security:salt-source user-property="username" />
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="concurrencyFilter"  class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <constructor-arg name="expiredUrl" value="/expired" />
    </bean>

    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="sessionAuthenticationStrategy" ref="sas" />
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler" >
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <!-- to prevent being redirected to ajax endpoints after logging in
                     e. g. the push ajax call can fail with "403 - Access denied" and will redirect the
                     whole page to "/login" and thus the whole page is redirected afterwards to push ajax address
                     to prevent that behaviour, we always redirect to "/" after login.
                 -->
                <property name="alwaysUseDefaultTargetUrl" value="true" />
            </bean>
        </property>
    </bean>

    <bean id="sas" class="net.mortalsilence.indiepim.server.spring.IndieSessionAuthStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <property name="maximumSessions" value="10" />
    </bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

    <bean id="indieUserService" class="net.mortalsilence.indiepim.server.security.IndieUserDetailsService" />

    <!-- custom entry point to present ajax calls with a 402 http status code instead of a redirect -->
    <bean id="authEntryPoint" class="net.mortalsilence.indiepim.server.spring.AjaxAwareLoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login" />
    </bean>    

    <!-- OTHER BEANS -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>